GD库之图像处理
图像处理
使用Image类进行图像处理功能，支持Gd库和Imagick库，包括对GIf图像处理的支持。

实例化类库

$image = new Image(); 
默认使用GD库进行图像操作，如果需要使用Imagick库操作的话，需要改成：

$image = new Image(\ Image::IMAGE_IMAGICK); 
或者采用

$image = new Image('Imagick'); 
图像操作

下面来看下基础的图像操作功能的使用方法。

打开图像文件

假设当前入口文件目录下面有一个1.jpg文件， 使用open方法打开图像文件进行相关操作：

$image = new Image(); 
$image->open('./1.jpg');
也可以简化成下面的方式：

$image = new Image(\ Image::IMAGE_GD,'./1.jpg'); // GD库
或者

$image = new Image(\ Image::IMAGE_IMAGICK,'./1.jpg');  // imagick库
获取图像信息

可以获取打开图片的信息，包括图像大小、类型等，例如：

$image = new Image(); 
$image->open('./1.jpg');
$width = $image->width(); // 返回图片的宽度
$height = $image->height(); // 返回图片的高度
$type = $image->type(); // 返回图片的类型
$mime = $image->mime(); // 返回图片的mime类型
$size = $image->size(); // 返回图片的尺寸数组 0 图片宽度 1 图片高度
裁剪图片 使用crop和save方法完成裁剪图片功能。

$image = new Image(); 
$image->open('./1.jpg');
将图片裁剪为400x400并保存为corp.jpg

$image->crop(400, 400)->save('./crop.jpg');
crop支持从某个坐标开始裁剪，例如下面从（100，30）开始裁剪：

$image = new Image(); 
$image->open('./1.jpg');
将图片裁剪为400x400并保存为corp.jpg

$image->crop(400, 400,100,30)->save('./crop.jpg');
crop 生成缩略图 使用thumb方法生成缩略图

$image = new Image(); 
$image->open('./1.jpg');
按照原图的比例生成一个最大为150*150的缩略图并保存为thumb.jpg

$image->thumb(150, 150)->save('./thumb.jpg');
thumb 我们看到实际生成的缩略图并不是150*150，因为默认采用原图等比例缩放的方式生成缩略图，最大宽度是150。 可以支持其他类型的缩略图生成，设置包括 Image的下列常量或者对应的数字：

IMAGE_THUMB_SCALE     =   1 ; //等比例缩放类型
IMAGE_THUMB_FILLED    =   2 ; //缩放后填充类型
IMAGE_THUMB_CENTER    =   3 ; //居中裁剪类型
IMAGE_THUMB_NORTHWEST =   4 ; //左上角裁剪类型
IMAGE_THUMB_SOUTHEAST =   5 ; //右下角裁剪类型
IMAGE_THUMB_FIXED     =   6 ; //固定尺寸缩放类型
例如：

居中裁剪

$image = new Image(); 
$image->open('./1.jpg');
生成一个居中裁剪为150*150的缩略图并保存为thumb.jpg

$image->thumb(150, 150,\ Image::IMAGE_THUMB_CENTER)->save('./thumb.jpg');
左上角剪裁

$image = new Image(); 
$image->open('./1.jpg');
生成一个左上角裁剪为150*150的缩略图并保存为thumb.jpg

$image->thumb(150, 150,\ Image::IMAGE_THUMB_NORTHWEST)->save('./thumb.jpg');
缩放填充

$image = new Image(); 
$image->open('./1.jpg');
生成一个缩放后填充大小150*150的缩略图并保存为thumb.jpg

$image->thumb(150, 150,\ Image::IMAGE_THUMB_FILLED)->save('./thumb.jpg');
固定大小

$image = new Image(); 
$image->open('./1.jpg');
生成一个固定大小为150*150的缩略图并保存为thumb.jpg

$image->thumb(150, 150,\ Image::IMAGE_THUMB_FIXED)->save('./thumb.jpg');
采用固定大小的缩略图可能会有所变形

添加图片水印

$image = new Image(); 
$image->open('./1.jpg');
将图片裁剪为440x440并保存为corp.jpg

$image->crop(440, 440)->save('./crop.jpg');
给裁剪后的图片添加图片水印（水印文件位于./logo.png），位置为右下角，保存为water.gif

$image->water('./logo.png')->save("water.gif");
给原图添加水印并保存为water_o.gif（需要重新打开原图）

$image->open('./1.jpg')->water('./logo.png')->save("water_o.gif"); 
water方法的第二个参数表示水印的位置，可以传入下列 Imag类的常量或者对应的数字：

IMAGE_WATER_NORTHWEST =   1 ; //左上角水印
IMAGE_WATER_NORTH     =   2 ; //上居中水印
IMAGE_WATER_NORTHEAST =   3 ; //右上角水印
IMAGE_WATER_WEST      =   4 ; //左居中水印
IMAGE_WATER_CENTER    =   5 ; //居中水印
IMAGE_WATER_EAST      =   6 ; //右居中水印
IMAGE_WATER_SOUTHWEST =   7 ; //左下角水印
IMAGE_WATER_SOUTH     =   8 ; //下居中水印
IMAGE_WATER_SOUTHEAST =   9 ; //右下角水印
例如：

$image = new Image(); 
在图片左上角添加水印（水印文件位于./logo.png） 并保存为water.jpg

$image->open('./1.jpg')->water('./logo.png',\ Image::IMAGE_WATER_NORTHWEST)->save("water.jpg"); 

//还可以支持水印图片的透明度（0~100，默认值是80），例如：

$image = new Image(); 

//在图片左上角添加水印（水印文件位于./logo.png） 水印图片的透明度为50 并保存为water.jpg

$image->open('./1.jpg')->water('./logo.png',\ Image::IMAGE_WATER_NORTHWEST,50)->save("water.jpg"); 
也可以支持给图片添加文字水印（假设在入口文件的同级目录下存在1.ttf字体文件），例如：

$image = new Image();

//在图片右下角添加水印文字 ThinkPHP 并保存为new.jpg
$image->open('./1.jpg')->text('ThinkPHP','./1.ttf',20,'#000000',\ Image::IMAGE_WATER_SOUTHEAST)->save("new.jpg"); 